{"version":3,"sources":["components/DownIcon.js","components/Fullpage.js","sections/TitlesSection.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillSection.js","components/Navigation.js","components/Magic.js","App.js","serviceWorker.js","index.js"],"names":["DownIcon","style","display","flexDirection","alignItems","justifyContent","marginTop","transform","maxWidth","h","v","r","dur","icon","faSortDown","size","color","this","props","Component","Fullpage","children","className","list","faGithub","faStackOverflow","faLinkedin","faCodepen","TitlesSection","data","title","subtitle","Object","keys","links","map","key","index","href","activeClass","to","spy","smooth","offset","duration","delay","name","AboutSection","sections","items","p","content","SkillCard","skill","backgroundColor","src","image","SkillSection","eachSkill","Navigation","hover","setState","cursor","textDecoration","state","onMouseOver","onMouseLeave","marginRight","set","Magic","faMagic","App","changerColor","rang","counter","snowColor","followMouse","flakesMax","VMaxY","VMaxX","onClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.845c3419.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSortDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { ShakeVertical } from \"reshake\";\r\n\r\nclass DownIcon extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          marginTop: \"-85px\",\r\n          transform: \"translateY(-45px)\"\r\n        }}\r\n      >\r\n        <div style={{ maxWidth: \"30px\" }}>\r\n          <ShakeVertical h={1} v={10} r={5} dur={700}>\r\n            <FontAwesomeIcon icon={faSortDown} size=\"4x\" style={{color:this.props.color}}/>\r\n          </ShakeVertical>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default DownIcon;\r\n","import React, { Component } from \"react\";\r\nimport \"./Fullpage.css\";\r\n\r\nclass Fullpage extends Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <div className={`fullpage ${this.props.className || \"\"}`}>{children}</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fullpage;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  faGithub,\r\n  faCodepen,\r\n  faStackOverflow,\r\n  faLinkedin\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport DownIcon from \"./../components/DownIcon\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport { Link, Element } from \"react-scroll\";\r\nimport { ShakeVertical } from \"reshake\";\r\nimport data from \"../data.json\";\r\nimport \"./TitleSection.css\";\r\n\r\nconst list = [faGithub, faStackOverflow, faLinkedin, faCodepen];\r\n\r\nclass TitlesSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"first\">\r\n          <h1 style={{ color: this.props.color }}>{data.title}</h1>\r\n          <div>\r\n            <h2 style={{ color: this.props.color }}>{data.subtitle}</h2>\r\n          </div>\r\n          <div className=\"icons-wrapper\">\r\n            {Object.keys(data.links).map((key, index) => {\r\n              return (\r\n                <ShakeVertical h={2} v={15} r={5} dur={700}>\r\n                  <div className=\"icon\">\r\n                    <a href={data.links[key]}>\r\n                      <FontAwesomeIcon\r\n                        icon={list[index]}\r\n                        size=\"3x\"\r\n                        style={{ color: this.props.color }}\r\n                      />\r\n                    </a>\r\n                  </div>\r\n                </ShakeVertical>\r\n              );\r\n            })}\r\n          </div>\r\n        </Fullpage>\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"About\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={10}\r\n          duration={500}\r\n          delay={0}\r\n        >\r\n          <DownIcon color={this.props.color} />\r\n        </Link>\r\n        <Element name=\"About\" className=\"element\"></Element>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TitlesSection;\r\n","import React, { Component } from \"react\";\r\nimport DownIcon from \"./../components/DownIcon\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport { Link, Element } from \"react-scroll\";\r\nimport data from \"../data.json\";\r\nimport \"./AboutSection.css\";\r\n\r\nclass AboutSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"second\">\r\n          <h3 style={{ color: this.props.color }}>{data.sections[0].title}</h3>\r\n          <div style={{ color: this.props.color }}>\r\n            {data.sections[0].items.map(p => {\r\n              return <p> {p.content} </p>;\r\n            })}\r\n          </div>\r\n        </Fullpage>\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"Skills\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={50}\r\n          duration={500}\r\n          delay={0}\r\n        >\r\n          <DownIcon color={this.props.color} />\r\n        </Link>\r\n        <Element name=\"Skills\" className=\"element\" ></Element>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutSection;\r\n","import React, { Component } from \"react\";\r\nimport \"./SkillCard.css\";\r\n\r\nclass SkillCard extends Component {\r\n  render() {\r\n    const { skill } = this.props;\r\n    return (\r\n      <div className=\"card\" style={{backgroundColor: this.props.color}}>\r\n        <div className=\"image-wrapper\">\r\n          <img src={skill.content.image} />\r\n        </div>\r\n        <div className=\"skill-title-wrapper\">\r\n          <h4>{skill.content.title}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SkillCard;\r\n","import React, { Component } from \"react\";\r\nimport SkillCard from \"./../components/SkillCard\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport \"./SkillSection.css\";\r\n\r\nclass SkillSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"third\">\r\n          <h3 style={{ color: this.props.color }}>{data.sections[1].title}</h3>\r\n          <div className=\"cards-wrapper\">\r\n            {data.sections[1].items.map(eachSkill => {\r\n              return <SkillCard skill={eachSkill} color={this.props.color} />;\r\n            })}\r\n          </div>\r\n        </Fullpage>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SkillSection;\r\n","import React, { Component } from \"react\";\r\nimport { Link , Element} from \"react-scroll\";\r\n\r\n\r\n\r\nclass Navigation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cursor: \"default\",\r\n      textDecoration: \"none\"\r\n    };\r\n  }\r\n\r\n  hover = () => {\r\n    this.setState({\r\n      cursor: \"pointer\",\r\n      textDecoration:\r\n        this.state.textDecoration === \"none\" ? \"underline\" : \"none\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n          <div\r\n            onMouseOver={() => {\r\n              this.hover();\r\n            }}\r\n            onMouseLeave={() => {\r\n              this.hover();\r\n            }}\r\n            style={{\r\n              marginRight: \"30px\",\r\n              cursor: this.state.cursor,\r\n              textDecoration: this.state.textDecoration,\r\n              color: this.props.color\r\n            }}\r\n          >\r\n            <Link\r\n              activeClass=\"active\"\r\n              to=\"test1\"\r\n              spy={true}\r\n              smooth={true}\r\n              offset={this.props.set}\r\n              duration={500}\r\n              delay={20}\r\n            >\r\n              {this.props.name}\r\n            </Link>\r\n            <Element name=\"test1\" className=\"element\"></Element>\r\n          </div>\r\n\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMagic } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Shake } from \"reshake\";\r\nimport \"./Magic.css\";\r\n\r\nclass Magic extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"magic\">\r\n        <Shake h={8} v={1} r={3} dur={700}>\r\n          <FontAwesomeIcon\r\n            icon={faMagic}\r\n          \r\n            color={this.props.color}\r\n            style={{\r\n              color: this.props.color,\r\n              marginTop: \"-20px\"\r\n            }}\r\n          />\r\n          <br />\r\n          <text className=\"txtmagic\" style={{ color: this.props.color }}>\r\n            click me!\r\n          </text>\r\n        </Shake>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Magic;\r\n","import React, { Component } from \"react\";\nimport TitlesSection from \"./sections/TitlesSection\";\nimport AboutSection from \"./sections/AboutSection\";\nimport SkillSection from \"./sections/SkillSection\";\nimport Navigation from \"./components/Navigation\";\nimport SnowStorm from \"react-snowstorm\";\nimport Magic from \"./components/Magic\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: \"#22a6b3\",\n      counter: 0\n    };\n  }\n\n  changerColor = () => {\n    let rang = [\"#4834d4\", \"#3d3d3d\", \"#B53471\", \"#303952\"];\n    if (this.state.counter >= 3) {\n      this.setState({\n        counter: 0,\n        color: rang[this.state.counter]\n      });\n    } else {\n      this.setState({\n        color: rang[this.state.counter],\n        counter: this.state.counter + 1\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <SnowStorm\n          snowColor={this.props.color}\n          followMouse={false}\n          flakesMax={180}\n          VMaxY={3}\n          VMaxX={2}\n        />\n        <div className=\"navigation\" style={{ color: this.state.color }}>\n          <Navigation name=\"About\" set={700} />\n          <Navigation name=\"Skills\" set={1400} />\n        </div>\n\n        <div\n          onClick={() => {\n            this.changerColor();\n          }}\n          className=\"box\"\n        >\n          <Magic color={this.state.color} />\n        </div>\n\n        <TitlesSection color={this.state.color} />\n\n        <AboutSection color={this.state.color} />\n\n        <SkillSection color={this.state.color} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}